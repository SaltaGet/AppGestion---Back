// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user required identifier and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.AuthLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/entities/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Entity create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity"
                ],
                "summary": "Entity create",
                "parameters": [
                    {
                        "description": "Entity data",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.EntityCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/entities/get_all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Entity all create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity"
                ],
                "summary": "Entity all get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Entity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/establishments/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establishment create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishment"
                ],
                "summary": "Establishment create",
                "parameters": [
                    {
                        "description": "Establishment data",
                        "name": "establishment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/establishment.EstablishmentCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/establishments/get_all_admin": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establishments get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EstablishmentAdmin"
                ],
                "summary": "Establishments get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthLogin": {
            "type": "object",
            "required": [
                "identifier",
                "password"
            ],
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.Entity": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "cuit": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "start_activities": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "entity.EntityCreate": {
            "type": "object",
            "required": [
                "cuit",
                "email",
                "name",
                "phone",
                "start_activities"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "123 Main St"
                },
                "city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "New York"
                },
                "country": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "USA"
                },
                "cuit": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "20123456789"
                },
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "entity@name.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Entity Name"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "1234567890"
                },
                "start_activities": {
                    "type": "string",
                    "example": "2023-01-01"
                },
                "zip_code": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "10001"
                }
            }
        },
        "establishment.EstablishmentCreate": {
            "type": "object",
            "required": [
                "date_create",
                "email",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "123 Main St"
                },
                "city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "New York"
                },
                "country": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "USA"
                },
                "date_create": {
                    "type": "string",
                    "example": "2023-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "name@establishment.com"
                },
                "entity_id": {
                    "type": "string",
                    "example": "00000000-aaaa-0000-aaaa-000000000000"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Establishment Name"
                },
                "phone": {
                    "type": "string",
                    "example": "1231231231"
                },
                "zip_code": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "10001"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "body": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "user.UserCreate": {
            "type": "object",
            "required": [
                "email",
                "entity_id",
                "first_name",
                "identifier",
                "last_name",
                "password",
                "phone",
                "role_id"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "123 Main St"
                },
                "city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "New York"
                },
                "country": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "USA"
                },
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "john@doe.com"
                },
                "entity_id": {
                    "type": "string",
                    "example": "00000000-aaaa-0000-aaaa-000000000000"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "John"
                },
                "identifier": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "12345678"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "1234567890"
                },
                "role_id": {
                    "type": "string",
                    "example": "00000000-aaaa-0000-aaaa-000000000000"
                },
                "zip_code": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "10001"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token. Example: \"Bearer eyJhbGciOiJIUz...\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "APP GESTION",
	Description:      "This is a api to app gestion",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
